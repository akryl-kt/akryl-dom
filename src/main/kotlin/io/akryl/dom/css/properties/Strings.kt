@file:Suppress("unused")

package io.akryl.dom.css.properties

import io.akryl.dom.css.PropertyBuilder

// todo properly type all css properties

class StringPropertyBuilder(name: String) : PropertyBuilder(name)

val all = StringPropertyBuilder("all")
val animation = StringPropertyBuilder("animation")
val animationDelay = StringPropertyBuilder("animationDelay")
val animationDirection = StringPropertyBuilder("animationDirection")
val animationDuration = StringPropertyBuilder("animationDuration")
val animationFillMode = StringPropertyBuilder("animationFillMode")
val animationIterationCount = StringPropertyBuilder("animationIterationCount")
val animationName = StringPropertyBuilder("animationName")
val animationPlayState = StringPropertyBuilder("animationPlayState")
val animationTimingFunction = StringPropertyBuilder("animationTimingFunction")
val backfaceVisibility = StringPropertyBuilder("backfaceVisibility")
val borderCollapse = StringPropertyBuilder("borderCollapse")
val borderImage = StringPropertyBuilder("borderImage")
val borderImageOutset = StringPropertyBuilder("borderImageOutset")
val borderImageRepeat = StringPropertyBuilder("borderImageRepeat")
val borderImageSlice = StringPropertyBuilder("borderImageSlice")
val borderImageSource = StringPropertyBuilder("borderImageSource")
val borderImageWidth = StringPropertyBuilder("borderImageWidth")
val borderSpacing = StringPropertyBuilder("borderSpacing")
val boxDecorationBreak = StringPropertyBuilder("boxDecorationBreak")
val captionSide = StringPropertyBuilder("captionSide")
val caretColor = StringPropertyBuilder("caretColor")
val clear = StringPropertyBuilder("clear")
val clip = StringPropertyBuilder("clip")
val columnCount = StringPropertyBuilder("columnCount")
val columnFill = StringPropertyBuilder("columnFill")
val columnGap = StringPropertyBuilder("columnGap")
val columnRule = StringPropertyBuilder("columnRule")
val columnRuleColor = StringPropertyBuilder("columnRuleColor")
val columnRuleStyle = StringPropertyBuilder("columnRuleStyle")
val columnRuleWidth = StringPropertyBuilder("columnRuleWidth")
val columnSpan = StringPropertyBuilder("columnSpan")
val columnWidth = StringPropertyBuilder("columnWidth")
val columns = StringPropertyBuilder("columns")
val counterIncrement = StringPropertyBuilder("counterIncrement")
val counterReset = StringPropertyBuilder("counterReset")
val direction = StringPropertyBuilder("direction")
val emptyCells = StringPropertyBuilder("emptyCells")
val filter = StringPropertyBuilder("filter")
val flexFlow = StringPropertyBuilder("flexFlow")
val fontKerning = StringPropertyBuilder("fontKerning")
val fontSizeAdjust = StringPropertyBuilder("fontSizeAdjust")
val fontStretch = StringPropertyBuilder("fontStretch")
val fontVariant = StringPropertyBuilder("fontVariant")
val grid = StringPropertyBuilder("grid")
val gridArea = StringPropertyBuilder("gridArea")
val gridAutoColumns = StringPropertyBuilder("gridAutoColumns")
val gridAutoFlow = StringPropertyBuilder("gridAutoFlow")
val gridAutoRows = StringPropertyBuilder("gridAutoRows")
val gridColumn = StringPropertyBuilder("gridColumn")
val gridColumnEnd = StringPropertyBuilder("gridColumnEnd")
val gridColumnGap = StringPropertyBuilder("gridColumnGap")
val gridColumnStart = StringPropertyBuilder("gridColumnStart")
val gridGap = StringPropertyBuilder("gridGap")
val gridRow = StringPropertyBuilder("gridRow")
val gridRowEnd = StringPropertyBuilder("gridRowEnd")
val gridRowGap = StringPropertyBuilder("gridRowGap")
val gridRowStart = StringPropertyBuilder("gridRowStart")
val gridTemplate = StringPropertyBuilder("gridTemplate")
val gridTemplateAreas = StringPropertyBuilder("gridTemplateAreas")
val gridTemplateColumns = StringPropertyBuilder("gridTemplateColumns")
val gridTemplateRows = StringPropertyBuilder("gridTemplateRows")
val hangingPunctuation = StringPropertyBuilder("hangingPunctuation")
val hyphens = StringPropertyBuilder("hyphens")
val isolation = StringPropertyBuilder("isolation")
val letterSpacing = StringPropertyBuilder("letterSpacing")
val listStyle = StringPropertyBuilder("listStyle")
val listStyleImage = StringPropertyBuilder("listStyleImage")
val listStylePosition = StringPropertyBuilder("listStylePosition")
val mixBlendMode = StringPropertyBuilder("mixBlendMode")
val order = StringPropertyBuilder("order")
val outlineOffset = StringPropertyBuilder("outlineOffset")
val outlineStyle = StringPropertyBuilder("outlineStyle")
val pageBreakAfter = StringPropertyBuilder("pageBreakAfter")
val pageBreakBefore = StringPropertyBuilder("pageBreakBefore")
val pageBreakInside = StringPropertyBuilder("pageBreakInside")
val perspective = StringPropertyBuilder("perspective")
val perspectiveOrigin = StringPropertyBuilder("perspectiveOrigin")
val quotes = StringPropertyBuilder("quotes")
val resize = StringPropertyBuilder("resize")
val scrollBehavior = StringPropertyBuilder("scrollBehavior")
val tabSize = StringPropertyBuilder("tabSize")
val tableLayout = StringPropertyBuilder("tableLayout")
val textAlignLast = StringPropertyBuilder("textAlignLast")
val textIndent = StringPropertyBuilder("textIndent")
val textJustify = StringPropertyBuilder("textJustify")
val textShadow = StringPropertyBuilder("textShadow")
val textTransform = StringPropertyBuilder("textTransform")
val transformStyle = StringPropertyBuilder("transformStyle")
val transitionDelay = StringPropertyBuilder("transitionDelay")
val transitionDuration = StringPropertyBuilder("transitionDuration")
val transitionProperty = StringPropertyBuilder("transitionProperty")
val transitionTimingFunction = StringPropertyBuilder("transitionTimingFunction")
val unicodeBidi = StringPropertyBuilder("unicodeBidi")
val visibility = StringPropertyBuilder("visibility")
val willChange = StringPropertyBuilder("willChange")
val wordSpacing = StringPropertyBuilder("wordSpacing")
val wordWrap = StringPropertyBuilder("wordWrap")
val writingMode = StringPropertyBuilder("writingMode")

